# 我这个 docker compose 由几个服务组成
services:
  mysql:
    image: mysql:8.0
    restart: always
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: 123
    volumes:
      #      - 初始化脚本
      - ./script/mysql/:/docker-entrypoint-initdb.d/
    ports:
      #      - 外部访问用 13316
      - "13316:3306"


  redis:
    image: redis:7.0-alpine
    restart: always
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - '6379:6379'


  prometheus:
    image: prom/prometheus:v2.47.2
    volumes:
      #      - 将本地的 prometheus 文件映射到容器内的配置文件
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      #      - 访问数据的端口
      - "9090:9090"
    command:
      - "--web.enable-remote-write-receiver"
      - "--config.file=/etc/prometheus/prometheus.yml"

  etcd:
    image: "bitnami/etcd:latest"
    restart: always
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
    ports:
      - "12379:2379"

  kafka:
    image: 'bitnami/kafka:3.6.0'
    ports:
      - '9092:9092'
      - '9094:9094'
    environment:
      - KAFKA_CFG_NODE_ID=0
      #      - 三个分区
      - KAFKA_CREATE_TOPICS=cblog_binlog:3:1
      #      - 允许自动创建 topic，线上不要开启
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://0.0.0.0:9092,CONTROLLER://:9093,EXTERNAL://0.0.0.0:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER

  zipkin:
    #    用的是不支持 Kafka 之类的简化版本
    image: openzipkin/zipkin-slim:2.24
    ports:
      - '9411:9411'